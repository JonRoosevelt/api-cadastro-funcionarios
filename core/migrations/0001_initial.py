# Generated by Django 3.0.8 on 2020-08-24 21:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Naver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='criado_em')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='atualizado_em')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('birthdate', models.DateField(db_column='data_nascimento', verbose_name='Data de Nascimento')),
                ('admission_date', models.DateField(db_column='data_admissao', verbose_name='Data de admiss√£o')),
                ('job_role', models.CharField(db_index=True, max_length=100)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='naver', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'naver',
            },
        ),
        migrations.CreateModel(
            name='Projeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='projeto', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'projeto',
            },
        ),
        migrations.CreateModel(
            name='NaverProjeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='criado_em')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='atualizado_em')),
                ('created_by', models.ForeignKey(blank=True, db_column='criado_por', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('naver', models.ForeignKey(db_column='naver_id', on_delete=django.db.models.deletion.PROTECT, to='core.Naver', verbose_name='naver')),
                ('projeto', models.ForeignKey(db_column='projeto_id', on_delete=django.db.models.deletion.PROTECT, to='core.Projeto', verbose_name='projeto')),
                ('updated_by', models.ForeignKey(blank=True, db_column='atualizado_por', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Projeto x Naver',
                'verbose_name_plural': 'Projetos x Navers',
                'db_table': 'naver_projeto',
                'unique_together': {('projeto', 'naver')},
            },
        ),
        migrations.AddField(
            model_name='naver',
            name='projects',
            field=models.ManyToManyField(blank=True, related_name='navers', through='core.NaverProjeto', to='core.Projeto'),
        ),
        migrations.AddField(
            model_name='naver',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='atualizado_por', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
    ]
